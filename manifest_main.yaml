apiVersion: v1
kind: Namespace
metadata:
  name: my-app-main
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: my-app-main
  name: endpoints
data:
  DB_HOST: '10.88.0.106'
  DB_PORT: '3306'
  HOST_ENV: 'main'
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: my-app-main
  labels:
    app: mysql
type: Opaque
data:
  MYSQL_USER: cm9vdA== # root
  MYSQL_PASSWORD: MTIzNA== # 1234
  MYSQL_DB: ZGItZGV2b3Bz # db-devops
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-volume
  namespace: my-app-main
  labels:
    type: local
    app: mysql
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /home/devops/tpi/main/mysql # ojo <> a la dev-> # puede que se necesite crear estas carpetas en la maquina de centos y dar permisos 777 
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  namespace: my-app-main
  labels:
    app: mysql
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: my-app-main
spec:
  selector:
    matchLabels:
      app: mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:5.7
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 3306
          envFrom:
            - configMapRef:
                name: mysql-config
            - secretRef:
                name: mysql-secret
          volumeMounts:
            - mountPath: /var/lib/mysql/data
              name: mysql-persistent-storage
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: my-app-main
  labels:
    app: mysql
spec:
  type: NodePort
  ports:
    - port: 3306
  selector:
    app: mysql
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-app-config
  namespace: my-app-main
  labels:
    app: my-app
data:
  BASE_URL: "tpi/main/"  # el tema de esta ruta lo veo gris,creo que apunta a donde esta la carpeta
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: my-app-deployment
  name: my-app-deployment
  namespace: my-app-main
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      run: my-app-deployment
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        run: my-app-deployment
    spec:
      containers:
        - image: gondragon/my-app:latest
          imagePullPolicy: Always
          name: my-app-deployment
          ports:
            - containerPort: 8000
              protocol: TCP
          env:
            - name: SQL_HOST
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: SQL_HOST
            - name: SQL_PORT
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: SQL_PORT
            - name: SQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_DB
            - name: SQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_USER
            - name: SQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_PASSWORD
            - name: BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: my-app-config
                  key: BASE_URL
---
apiVersion: v1
kind: Service
metadata:
  name: my-app-service
  namespace: my-app-main
spec:
  selector:
    run: my-app-deployment
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-app-ingress
  namespace: my-app-main
  # annotations:
  # kubernetes.io/ingress.class: "nginx"
  # nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - http:
        paths:
          - path: /tpi/main   # ver bien el tema de ruta 
            pathType: Prefix
            backend:
              service:
                name: my-app-service
                port:
                  number: 80