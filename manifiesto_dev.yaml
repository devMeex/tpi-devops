apiVersion: v1
kind: Namespace
metadata:
  name: my-app-dev
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: my-app-dev
  name: endpoints
data:
  DB_HOST: '10.96.0.5'
  DB_PORT: '3306'
  HOST_ENV: 'dev'
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: my-app-dev
type: Opaque
data:
  MYSQL_USER: cm9vdA==
  MYSQL_PASSWORD: MTIzNA==
  MYSQL_DB: ZGItZGV2b3Bz
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: my-app-dev
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - image: mysql:5.7
          name: mysql
          env:
            - name: MYSQL_DB
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_DB
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_PASSWORD
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql/data
              subPath: mysql
      volumes:
        - name: mysql-persistent-storage
          hostPath:
            path: /home/devops/mysql-dev
            type: Directory
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: my-app-dev
  name: my-app-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /tpi/dev
spec:
  rules:
    - http:
        paths:
          - path: /tpi/dev
            pathType: Prefix
            backend:
              service:
                name: my-app-service-back
                port:
                  number: 80
---
apiVersion: v1
kind: Service
metadata:
  namespace: my-app-dev
  name: mysql
spec:
  ports:
    - port: 3306
  selector:
    app: mysql
  clusterIP: 10.96.0.5
---
apiVersion: v1
kind: Service
metadata:
  namespace: my-app-dev
  name: my-app-service-back
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  selector:
    app: back-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: my-app-dev
  name: back-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: back-api
  template:
    metadata:
      labels:
        app: back-api
    spec:
      containers:
        - image: gondragon/my_app:dev
          imagePullPolicy: Always
          name: back-api
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: endpoints
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: endpoints
                  key: DB_PORT
            - name: MYSQL_DB
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_DB
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_PASSWORD
            - name: HOST_ENV
              valueFrom:
                configMapKeyRef:
                  name: endpoints
                  key: HOST_ENV
          ports:
            - containerPort: 3000
              name: back-api
              protocol: TCP